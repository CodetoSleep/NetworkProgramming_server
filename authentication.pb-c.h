/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: authentication.proto */

#ifndef PROTOBUF_C_authentication_2eproto__INCLUDED
#define PROTOBUF_C_authentication_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003003 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _Nam__LoginRequest Nam__LoginRequest;
typedef struct _Nam__SignupRequest Nam__SignupRequest;
typedef struct _Nam__LogoutRequest Nam__LogoutRequest;
typedef struct _Nam__BaseMessage Nam__BaseMessage;
typedef struct _Nam__AuthenticationResponse Nam__AuthenticationResponse;


/* --- enums --- */


/* --- messages --- */

struct  _Nam__LoginRequest
{
  ProtobufCMessage base;
  char *username;
  char *password;
};
#define NAM__LOGIN_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&nam__login_request__descriptor) \
    , (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string }


struct  _Nam__SignupRequest
{
  ProtobufCMessage base;
  char *username;
  char *password;
  char *email;
};
#define NAM__SIGNUP_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&nam__signup_request__descriptor) \
    , (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string }


struct  _Nam__LogoutRequest
{
  ProtobufCMessage base;
  char *username;
};
#define NAM__LOGOUT_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&nam__logout_request__descriptor) \
    , (char *)protobuf_c_empty_string }


struct  _Nam__BaseMessage
{
  ProtobufCMessage base;
  int32_t messagetype;
  Nam__LoginRequest *loginrequest;
  Nam__SignupRequest *signuprequest;
  Nam__LogoutRequest *logoutrequest;
  Nam__AuthenticationResponse *authenticationresponse;
};
#define NAM__BASE_MESSAGE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&nam__base_message__descriptor) \
    , 0, NULL, NULL, NULL, NULL }


struct  _Nam__AuthenticationResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean success;
  char *message;
};
#define NAM__AUTHENTICATION_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&nam__authentication_response__descriptor) \
    , 0, (char *)protobuf_c_empty_string }


/* Nam__LoginRequest methods */
void   nam__login_request__init
                     (Nam__LoginRequest         *message);
size_t nam__login_request__get_packed_size
                     (const Nam__LoginRequest   *message);
size_t nam__login_request__pack
                     (const Nam__LoginRequest   *message,
                      uint8_t             *out);
size_t nam__login_request__pack_to_buffer
                     (const Nam__LoginRequest   *message,
                      ProtobufCBuffer     *buffer);
Nam__LoginRequest *
       nam__login_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   nam__login_request__free_unpacked
                     (Nam__LoginRequest *message,
                      ProtobufCAllocator *allocator);
/* Nam__SignupRequest methods */
void   nam__signup_request__init
                     (Nam__SignupRequest         *message);
size_t nam__signup_request__get_packed_size
                     (const Nam__SignupRequest   *message);
size_t nam__signup_request__pack
                     (const Nam__SignupRequest   *message,
                      uint8_t             *out);
size_t nam__signup_request__pack_to_buffer
                     (const Nam__SignupRequest   *message,
                      ProtobufCBuffer     *buffer);
Nam__SignupRequest *
       nam__signup_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   nam__signup_request__free_unpacked
                     (Nam__SignupRequest *message,
                      ProtobufCAllocator *allocator);
/* Nam__LogoutRequest methods */
void   nam__logout_request__init
                     (Nam__LogoutRequest         *message);
size_t nam__logout_request__get_packed_size
                     (const Nam__LogoutRequest   *message);
size_t nam__logout_request__pack
                     (const Nam__LogoutRequest   *message,
                      uint8_t             *out);
size_t nam__logout_request__pack_to_buffer
                     (const Nam__LogoutRequest   *message,
                      ProtobufCBuffer     *buffer);
Nam__LogoutRequest *
       nam__logout_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   nam__logout_request__free_unpacked
                     (Nam__LogoutRequest *message,
                      ProtobufCAllocator *allocator);
/* Nam__BaseMessage methods */
void   nam__base_message__init
                     (Nam__BaseMessage         *message);
size_t nam__base_message__get_packed_size
                     (const Nam__BaseMessage   *message);
size_t nam__base_message__pack
                     (const Nam__BaseMessage   *message,
                      uint8_t             *out);
size_t nam__base_message__pack_to_buffer
                     (const Nam__BaseMessage   *message,
                      ProtobufCBuffer     *buffer);
Nam__BaseMessage *
       nam__base_message__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   nam__base_message__free_unpacked
                     (Nam__BaseMessage *message,
                      ProtobufCAllocator *allocator);
/* Nam__AuthenticationResponse methods */
void   nam__authentication_response__init
                     (Nam__AuthenticationResponse         *message);
size_t nam__authentication_response__get_packed_size
                     (const Nam__AuthenticationResponse   *message);
size_t nam__authentication_response__pack
                     (const Nam__AuthenticationResponse   *message,
                      uint8_t             *out);
size_t nam__authentication_response__pack_to_buffer
                     (const Nam__AuthenticationResponse   *message,
                      ProtobufCBuffer     *buffer);
Nam__AuthenticationResponse *
       nam__authentication_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   nam__authentication_response__free_unpacked
                     (Nam__AuthenticationResponse *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Nam__LoginRequest_Closure)
                 (const Nam__LoginRequest *message,
                  void *closure_data);
typedef void (*Nam__SignupRequest_Closure)
                 (const Nam__SignupRequest *message,
                  void *closure_data);
typedef void (*Nam__LogoutRequest_Closure)
                 (const Nam__LogoutRequest *message,
                  void *closure_data);
typedef void (*Nam__BaseMessage_Closure)
                 (const Nam__BaseMessage *message,
                  void *closure_data);
typedef void (*Nam__AuthenticationResponse_Closure)
                 (const Nam__AuthenticationResponse *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor nam__login_request__descriptor;
extern const ProtobufCMessageDescriptor nam__signup_request__descriptor;
extern const ProtobufCMessageDescriptor nam__logout_request__descriptor;
extern const ProtobufCMessageDescriptor nam__base_message__descriptor;
extern const ProtobufCMessageDescriptor nam__authentication_response__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_authentication_2eproto__INCLUDED */
